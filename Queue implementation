public class Queue{
    private int[] queue;
    private int front;
    private int rear;
    private int size;
    private int capacity;
    public Queue(int capacity){
        this.capacity=capacity;
        queue=new int[capacity];
        front=0;
        rear=-1;
        size=0;
    }
    public void enqueue(int element){
        if(size==capacity){
            System.out.println("Queue is full!");
            return;
        }
        rear=(rear+1)%capacity;
        queue[rear]=element;
        size++;
    }
    public int dequeue(){
        if(isEmpty()){
            System.out.println("Queue is empty!");
            return -1;
        }
        int removedElement=queue[front];
        front=(front+1)%capacity;
        size--;
        return removedElement;
    }
    public int peek(){
        if(isEmpty()){
            System.out.println("Queue is empty!");
            return -1;
        }
        return queue[front];
    }
    public boolean isEmpty(){
        return size==0;
    }
    public boolean isFull(){
        return size==capacity;
    }
    public static void main(String[] args){
        Queue queue=new Queue(5);
        queue.enqueue(1);
        queue.enqueue(2);
        queue.enqueue(3);
        queue.enqueue(4);
        queue.enqueue(5);
        System.out.println("Front element: " +queue.peek());
        System.out.println("Dequeue: " +queue.dequeue());
        System.out.println("Dequeue: " +queue.dequeue());
        queue.enqueue(6);
        System.out.println("Front element: " +queue.peek());
    }
}
